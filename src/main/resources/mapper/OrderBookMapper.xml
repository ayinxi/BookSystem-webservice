<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="booksystem.dao.OrderBookDao">
    <insert id="addOrderBook">
        INSERT INTO order_book(id,book_id,order_id,number,rate,remark,return_status,return_reason,check_opinion,remark_time,image_s,image_b,remark_status,return_time,return_detail,transport_status)
        VALUES(MD5(UUID()),#{book_id},#{order_id},#{number},#{rate},#{remark},#{return_status},#{return_reason},#{check_opinion},#{remark_time},#{image_s},#{image_b},#{remark_status},#{return_time},#{return_detail},#{transport_status});
    </insert>

    <select id="getAllOrderBook" resultType="java.util.HashMap">
        SELECT id as order_book_id,remark,order_id,number,return_status,return_reason,check_opinion,rate,book_id,book_price as bookTotalPrice,
               remark_time,image_s,image_b,remark_status,return_time,return_detail,transport_status,
               (SELECT send_time FROM `order` WHERE id=order_id) as send_time,
               (SELECT firm_time FROM `order` WHERE id=order_id) as firm_time,
               (SELECT total FROM `order` WHERE id=order_id) as total,
               (SELECT status FROM `order` WHERE id=order_id) as status,
               (SELECT update_time FROM `order` WHERE id=order_id) as update_time,
               (SELECT create_time FROM `order` WHERE id=order_id) as create_time,
               (SELECT username FROM user WHERE id=(SELECT user_id FROM `order` WHERE id=order_id)) as username,
               (SELECT book_name FROM book WHERE id=book_id) as book_name,
               (SELECT price FROM book WHERE id=book_id) as price,
               (SELECT author FROM book WHERE id=book_id) as author,
               (SELECT press FROM book WHERE id=book_id) as press,
               (SELECT image_b FROM book WHERE id=book_id) as image_b,
               (SELECT image_s FROM book WHERE id=book_id) as image_s,
               (SELECT repertory FROM book WHERE id=book_id) as repertory,
               (SELECT shop_id FROM book WHERE id=book_id) as shop_id,
               (SELECT volume FROM book WHERE id=book_id) as volume,
               (SELECT shop_name FROM shop WHERE id=(SELECT shop_id FROM `order`WHERE id=order_id)) as shop_name,
               (SELECT shop_id FROM `order`WHERE id=order_id) as shop_id from order_book
        ORDER BY create_time DESC
    </select>

    <select id="getAllOrderBookByUser" parameterType="java.util.List"  resultType="java.util.HashMap">
        SELECT id as order_book_id,remark,order_id,number,return_status,return_reason,check_opinion,rate,book_price as bookTotalPrice,
               book_id,remark_time,image_s,image_b,remark_status,return_time,return_detail,transport_status,
        (SELECT send_time FROM `order` WHERE id=order_id) as send_time,
        (SELECT firm_time FROM `order` WHERE id=order_id) as firm_time,
        (SELECT total FROM `order` WHERE id=order_id) as total,
        (SELECT status FROM `order` WHERE id=order_id) as status,
        (SELECT update_time FROM `order` WHERE id=order_id) as update_time,
        (SELECT create_time FROM `order` WHERE id=order_id) as create_time,
        (SELECT username FROM user WHERE id=(SELECT user_id FROM `order` WHERE id=order_id)) as username,
        (SELECT book_name FROM book WHERE id=book_id) as book_name,
        (SELECT price FROM book WHERE id=book_id) as price,
        (SELECT author FROM book WHERE id=book_id) as author,
        (SELECT press FROM book WHERE id=book_id) as press,
        (SELECT image_b FROM book WHERE id=book_id) as image_b,
        (SELECT image_s FROM book WHERE id=book_id) as image_s,
        (SELECT repertory FROM book WHERE id=book_id) as repertory,
        (SELECT shop_id FROM book WHERE id=book_id) as shop_id,
        (SELECT volume FROM book WHERE id=book_id) as volume,
        (SELECT shop_name FROM shop WHERE id=(SELECT shop_id FROM `order`WHERE id=order_id)) as shop_name,
        (SELECT shop_id FROM `order`WHERE id=order_id) as shop_id from order_book where order_id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        ORDER BY create_time DESC
    </select>

    <select id="getAllOrderBookByShop" parameterType="java.util.List"  resultType="java.util.HashMap">
        SELECT id as order_book_id,remark,order_id,number,return_status,return_reason,check_opinion,rate,book_price as bookTotalPrice,
               book_id,remark_time,image_s,image_b,remark_status,return_time,return_detail,transport_status,
        (SELECT send_time FROM `order` WHERE id=order_id) as send_time,
        (SELECT firm_time FROM `order` WHERE id=order_id) as firm_time,
        (SELECT total FROM `order` WHERE id=order_id) as total,
        (SELECT status FROM `order` WHERE id=order_id) as status,
        (SELECT update_time FROM `order` WHERE id=order_id) as update_time,
        (SELECT create_time FROM `order` WHERE id=order_id) as create_time,
        (SELECT username FROM user WHERE id=(SELECT user_id FROM `order` WHERE id=order_id)) as username,
        (SELECT book_name FROM book WHERE id=book_id) as book_name,
        (SELECT price FROM book WHERE id=book_id) as price,
        (SELECT author FROM book WHERE id=book_id) as author,
        (SELECT press FROM book WHERE id=book_id) as press,
        (SELECT image_b FROM book WHERE id=book_id) as image_b,
        (SELECT image_s FROM book WHERE id=book_id) as image_s,
        (SELECT repertory FROM book WHERE id=book_id) as repertory,
        (SELECT shop_id FROM book WHERE id=book_id) as shop_id,
        (SELECT volume FROM book WHERE id=book_id) as volume,
        (SELECT shop_name FROM shop WHERE id=(SELECT shop_id FROM `order`WHERE id=order_id)) as shop_name,
        (SELECT shop_id FROM `order`WHERE id=order_id) as shop_id from order_book where shop_id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        ORDER BY create_time DESC
    </select>

    <select id="getOrderBookByID" resultType="java.util.HashMap">
        SELECT id as order_book_id,remark,order_id,number,return_status,return_reason,check_opinion,rate,book_price as bookTotalPrice,
               book_id,remark_time,image_s,image_b,remark_status,return_time,return_detail,transport_status,
               (SELECT send_time FROM `order` WHERE id=order_id) as send_time,
               (SELECT firm_time FROM `order` WHERE id=order_id) as firm_time,
               (SELECT total FROM `order` WHERE id=order_id) as total,
               (SELECT update_time FROM `order` WHERE id=order_id) as update_time,
               (SELECT status FROM `order` WHERE id=order_id) as status,
               (SELECT create_time FROM `order` WHERE id=order_id) as create_time,
               (SELECT username FROM user WHERE id=(SELECT user_id FROM `order` WHERE id=order_id)) as username,
               (SELECT book_name FROM book WHERE id=book_id) as book_name,
               (SELECT price FROM book WHERE id=book_id) as price,
               (SELECT author FROM book WHERE id=book_id) as author,
               (SELECT press FROM book WHERE id=book_id) as press,
               (SELECT image_b FROM book WHERE id=book_id) as image_b,
               (SELECT image_s FROM book WHERE id=book_id) as image_s,
               (SELECT repertory FROM book WHERE id=book_id) as repertory,
               (SELECT shop_id FROM book WHERE id=book_id) as shop_id,
               (SELECT volume FROM book WHERE id=book_id) as volume,
               (SELECT shop_name FROM shop WHERE id=(SELECT shop_id FROM `order`WHERE id=order_id)) as shop_name,
               (SELECT shop_id FROM `order`WHERE id=order_id) as shop_id from order_book where order_id=#{order_id}
        ORDER BY create_time DESC
    </select>

    <select id="getBookByID" resultType="java.util.Map">
        select * from order_book where id=#{order_book_id}
    </select>

    <update id="updateRemark">
        update order_book set remark=#{remark},rate=#{rate},remark_status=1,remark_time=now() where id=#{order_book_id}
    </update>

    <update id="updateReturn">
        update order_book set return_reason=#{return_reason},return_detail=#{return_detail},return_status=#{return_status},
                              transport_status=#{transport_status},return_time=now() where id=#{order_book_id}
    </update>

</mapper>
